[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-cli"
version = "0.1.0"
description = "A cli for the Model Context Provider"
requires-python = ">=3.11"
readme = "README.md"
authors = [
  { name = "Chris Hay", email = "chrishayuk@younknowwhere.com" }
]
keywords = ["llm", "openai", "claude", "mcp", "cli"]
license = {text = "MIT"}
dependencies = [
  "anyio>=4.6.2.post1",
  "asyncio>=3.4.3",
  "chuk-mcp>=0.1.7",
  "chuk-virtual-fs>=0.1.6",
  "ollama>=0.4.2",
  "openai>=1.55.3",
  "pandas>=2.2.3",
  "prompt-toolkit>=3.0.50",
  "python-dotenv>=1.0.1",
  "requests>=2.32.3", # Re-enable if you actually want to install from PyPI
  "rich>=13.9.4",
  "typer>=0.15.2",
]

[project.scripts]
mcp-cli = "mcp_cli.main:app"
mcp-llm = "mcp_cli.llm.__main__:main"

[project.optional-dependencies]
# Optional dependencies for the CLI features
cli = [
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.0",
    "typer>=0.9.0",
    "pyperclip>=1.8.0",
    "python-dotenv>=1.0.0",
    "discord.py>=2.3.0", # Added Discord library
]

# Optional dependencies for development
dev = [
    "numpy>=2.2.3",
    "pytest>=7.0",
    "pytest-asyncio>=0.18",
    "uv>=0.1.10", # Added uv for development tooling
]

wasm = []

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[dependency-groups]
dev = [
  "pydantic>=2.10.2",
  "pytest-asyncio>=0.25.3",
]
